{"version":3,"sources":["webpack://hojin-s-note/./src/components/layout.tsx","webpack://hojin-s-note/./src/components/series.tsx","webpack://hojin-s-note/./src/pages/series.tsx"],"names":["children","className","Link","to","series","count","edges","data","allMarkdownRemark","counts","forEach","node","fields","Object","keys","map","key"],"mappings":"yIAsCA,IA9Be,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,OACb,gCACE,8BACE,uBAAKC,UAAU,SACb,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,iBAEF,uBAAKF,UAAU,OACb,0BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAG,WAAT,cAYR,4BACGH,M,iHCrBP,WAAe,OAAGI,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAX,OACb,uBAAKJ,UAAU,uBACb,gBAAC,EAAAC,KAAD,CAAMC,GAAE,WAAaC,GACfA,EADN,KACiBC,EADjB,OCyDJ,EAzCmB,SAAC,GAMG,IAHjBC,EAGiB,EALrBC,KACEC,kBACEF,MAIEG,EAAmC,GAOzC,OANAH,EAAMI,SAAQ,YAAc,IAClBN,EADkB,EAAXO,KACSC,OAAhBR,OACJA,IACFK,EAAOL,GAAU,GAAKK,EAAOL,IAAW,OAI1C,gBAAC,IAAD,KACGS,OAAOC,KAAKL,GAAQM,KAAI,SAACC,GACxB,IAAMX,EAAQI,EAAOO,GACrB,OACE,gBAAC,EAAD,CAAQZ,OAAQY,EAAKX,MAAOA,EAAOW,IAAKA","file":"component---src-pages-series-tsx-d255630a99efa8ef8b1e.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport './layout.sass';\n\ninterface LayoutProps {\n    children: React.ReactNode;\n}\n\nconst Layout = ({ children }: LayoutProps) => (\n  <>\n    <header>\n      <div className=\"title\">\n        <Link to=\"/\">Hojin&apos;s Note</Link>\n      </div>\n      <nav className=\"nav\">\n        <ul>\n          <li>\n            <Link to=\"/series\">\n              Series\n            </Link>\n          </li>\n          {/* <li>\n              <Link to=\"/contact\">\n                contact\n              </Link>\n            </li> */}\n        </ul>\n      </nav>\n    </header>\n    <main>\n      {children}\n    </main>\n    {/* <footer>\n        footer\n      </footer> */}\n  </>\n);\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './series.sass';\n\ninterface SeriesProps {\n  series: string;\n  count: number;\n}\n\nexport default ({ series, count }: SeriesProps) => (\n  <div className=\"singleSeriesWrapper\">\n    <Link to={`/?query=${series}`}>\n      {`${series} (${count})`}\n    </Link>\n  </div>\n);\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport Series from '../components/series';\n\ninterface IndexRouteProps {\n  data: {\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          id: string,\n          html: string,\n          frontmatter: {\n            title: string,\n            date: string,\n            ep: number | string,\n          }\n          fields: {\n            path: string,\n            series?: string,\n          }\n        },\n      }[],\n    }\n  }\n}\n\nconst IndexRoute = ({\n  data: {\n    allMarkdownRemark: {\n      edges,\n    },\n  },\n}: IndexRouteProps) => {\n  const counts: { [id: string]: number } = {};\n  edges.forEach(({ node }) => {\n    const { series } = node.fields;\n    if (series) {\n      counts[series] = 1 + (counts[series] || 0);\n    }\n  });\n  return (\n    <Layout>\n      {Object.keys(counts).map((key) => {\n        const count = counts[key];\n        return (\n          <Series series={key} count={count} key={key} />\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query MyQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          fields {\n            series\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexRoute;\n"],"sourceRoot":""}